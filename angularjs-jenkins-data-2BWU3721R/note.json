{
  "paragraphs": [
    {
      "text": "%spark\nimport org.apache.spark.sql.functions._\nimport com.knockdata.zeppelin.highcharts._\nimport com.knockdata.zeppelin.highcharts.model._\n\n\nval testcaseSchema \u003d StructType(Array(\n    StructField(\"buildTimestamp\", StringType, nullable\u003dtrue),\n    StructField(\"testCaseStatus\", StringType, nullable\u003dtrue),\n    StructField(\"duration\", DoubleType, nullable\u003dtrue),\n    StructField(\"buildNumber\", IntegerType, nullable\u003dtrue),\n    StructField(\"builtOn\", StringType, nullable\u003dtrue),\n    StructField(\"sut\", StringType, nullable\u003dtrue),\n    StructField(\"jobName\", StringType, nullable\u003dtrue),\n    StructField(\"className\", StringType, nullable\u003dtrue),\n    StructField(\"testCaseName\", StringType, nullable\u003dtrue)\n  ))\n    \n    \nval testcaseFile \u003d \"/usr/zeppelin/data/angularjs-jenkins-data/testCase.csv.gz\"\n\nval testcaseDF \u003d sqlContext.read.format(\"com.databricks.spark.csv\").option(\"header\", \"false\").schema(testcaseSchema).load(testcaseFile).cache\ntestcaseDF.first",
      "dateUpdated": "Sep 9, 2016 2:10:11 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1473353569087_-781118581",
      "id": "20160908-165249_182106313",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.sql.functions._\nimport com.knockdata.zeppelin.highcharts._\nimport com.knockdata.zeppelin.highcharts.model._\ntestcaseSchema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(buildTimestamp,StringType,true), StructField(testCaseStatus,StringType,true), StructField(duration,DoubleType,true), StructField(buildNumber,IntegerType,true), StructField(builtOn,StringType,true), StructField(sut,StringType,true), StructField(jobName,StringType,true), StructField(className,StringType,true), StructField(testCaseName,StringType,true))\ntestcaseFile: String \u003d /usr/zeppelin/data/angularjs-jenkins-data/testCase.csv.gz\ntestcaseDF: org.apache.spark.sql.DataFrame \u003d [buildTimestamp: string, testCaseStatus: string, duration: double, buildNumber: int, builtOn: string, sut: string, jobName: string, className: string, testCaseName: string]\nres58: org.apache.spark.sql.Row \u003d [2016/09/08 15:31:51,PASSED,0.783,5010,,,angular.js-angular-master,$anchorScroll.basic functionality,should scroll to #bottom when clicking #top and vice versa]\n"
      },
      "dateCreated": "Sep 8, 2016 4:52:49 PM",
      "dateStarted": "Sep 9, 2016 2:10:12 AM",
      "dateFinished": "Sep 9, 2016 2:10:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "testcaseDF.select(\"testCaseStatus\").distinct.collect\ntestcaseDF.groupBy(\"testCaseStatus\").count.show",
      "dateUpdated": "Sep 8, 2016 6:34:39 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1473359600125_-902013761",
      "id": "20160908-183320_1020371154",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res22: Array[org.apache.spark.sql.Row] \u003d Array([FIXED], [PASSED], [FAILED])\n+--------------+-----+\n|testCaseStatus|count|\n+--------------+-----+\n|         FIXED|    3|\n|        PASSED|75696|\n|        FAILED|    3|\n+--------------+-----+\n\n"
      },
      "dateCreated": "Sep 8, 2016 6:33:20 PM",
      "dateStarted": "Sep 8, 2016 6:34:39 PM",
      "dateFinished": "Sep 8, 2016 6:34:42 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "highcharts(testcaseDF\n  .series(\"name\" -\u003e \"testCaseStatus\", \"y\" -\u003e count(col(\"testCaseStatus\"))))\n  .chart(Chart.column).plot()",
      "dateUpdated": "Sep 8, 2016 6:35:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1473355125039_-1866870707",
      "id": "20160908-171845_1807217920",
      "result": {
        "code": "SUCCESS",
        "type": "ANGULAR",
        "msg": "\n\u003cdiv id\u003d\"highcharts_1ffe54c3-bd49-481b-ba0e-bae42824fb0e\" style\u003d\"min-width: 310px; height: 400px; margin: 0 auto\"\u003e\u003c/div\u003e\n\n\u003cscript type\u003d\"text/javascript\"\u003e\n$(function () {\nvar data \u003d {\n  \"series\":[{\n    \"data\":[{\n      \"name\":\"FIXED\",\n      \"y\":3\n    },{\n      \"name\":\"PASSED\",\n      \"y\":75696\n    },{\n      \"name\":\"FAILED\",\n      \"y\":3\n    }]\n  }],\n  \"chart\":{\n    \"type\":\"column\"\n  }\n}\n\n$(\"#highcharts_1ffe54c3-bd49-481b-ba0e-bae42824fb0e\").highcharts(data)\n});\n\u003c/script\u003e\n"
      },
      "dateCreated": "Sep 8, 2016 5:18:45 PM",
      "dateStarted": "Sep 8, 2016 6:35:35 PM",
      "dateFinished": "Sep 8, 2016 6:35:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "highcharts(testcaseDF\n  .series(\"name\" -\u003e \"testCaseStatus\", \"y\" -\u003e count(col(\"testCaseStatus\"))))\n  .chart(Chart.pie).plot()",
      "dateUpdated": "Sep 8, 2016 6:35:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1473359480336_-566682930",
      "id": "20160908-183120_890752108",
      "result": {
        "code": "SUCCESS",
        "type": "ANGULAR",
        "msg": "\n\u003cdiv id\u003d\"highcharts_a8a88fb8-6542-48d5-9547-4b95a64c2631\" style\u003d\"min-width: 310px; height: 400px; margin: 0 auto\"\u003e\u003c/div\u003e\n\n\u003cscript type\u003d\"text/javascript\"\u003e\n$(function () {\nvar data \u003d {\n  \"series\":[{\n    \"data\":[{\n      \"name\":\"FIXED\",\n      \"y\":3\n    },{\n      \"name\":\"PASSED\",\n      \"y\":75696\n    },{\n      \"name\":\"FAILED\",\n      \"y\":3\n    }]\n  }],\n  \"chart\":{\n    \"type\":\"pie\"\n  }\n}\n\n$(\"#highcharts_a8a88fb8-6542-48d5-9547-4b95a64c2631\").highcharts(data)\n});\n\u003c/script\u003e\n"
      },
      "dateCreated": "Sep 8, 2016 6:31:20 PM",
      "dateStarted": "Sep 8, 2016 6:35:47 PM",
      "dateFinished": "Sep 8, 2016 6:35:48 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// testcaseDF.filter($\"testCaseStatus\" !\u003d\u003d \"PASSED\").show\nval notpassed \u003d testcaseDF.filter($\"testCaseStatus\" !\u003d\u003d \"PASSED\")\nprintln(notpassed.collect.mkString(\"\\n\"))",
      "dateUpdated": "Sep 8, 2016 7:00:43 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 266.5340881347656,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1473359746990_-940691154",
      "id": "20160908-183546_360566884",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "notpassed: org.apache.spark.sql.DataFrame \u003d [buildTimestamp: string, testCaseStatus: string, duration: double, buildNumber: int, builtOn: string, sut: string, jobName: string, className: string, testCaseName: string]\n[2016/07/20 21:57:18,FIXED,0.003,613,,,angular.js-angular-v1.2.x,jqLite Safari 6.2.8 (Mac OS X 10.8.5).$compile a[href] sanitization,should use $$sanitizeUri when working with svg and xlink:href]\n[2016/07/20 21:57:18,FIXED,0.007,613,,,angular.js-angular-v1.2.x,jqLite Firefox 47.0.0 (Mac OS X 10.8.0).$compile a[href] sanitization,should use $$sanitizeUri when working with svg and xlink:href]\n[2016/07/20 21:57:18,FIXED,0.008,613,,,angular.js-angular-v1.2.x,jqLite Chrome 49.0.2623 (Mac OS X 10.8.5).$compile a[href] sanitization,should use $$sanitizeUri when working with svg and xlink:href]\n[2016/07/20 18:22:16,FAILED,0.005,612,,,angular.js-angular-v1.2.x,jqLite Safari 6.2.8 (Mac OS X 10.8.5).$compile a[href] sanitization,should use $$sanitizeUri when working with svg and xlink:href]\n[2016/07/20 18:22:16,FAILED,0.013,612,,,angular.js-angular-v1.2.x,jqLite Chrome 49.0.2623 (Mac OS X 10.8.5).$compile a[href] sanitization,should use $$sanitizeUri when working with svg and xlink:href]\n[2016/07/20 18:22:16,FAILED,0.009,612,,,angular.js-angular-v1.2.x,jqLite Firefox 47.0.0 (Mac OS X 10.8.0).$compile a[href] sanitization,should use $$sanitizeUri when working with svg and xlink:href]\n"
      },
      "dateCreated": "Sep 8, 2016 6:35:46 PM",
      "dateStarted": "Sep 8, 2016 7:00:43 PM",
      "dateFinished": "Sep 8, 2016 7:00:44 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.sql.functions._\n\ntestcaseDF.groupBy(\"testCaseName\").agg(\n    min($\"duration\").alias(\"min\"), \n    max($\"duration\").alias(\"max\"), \n    mean($\"duration\").alias(\"mean\"), \n    stdev_pop(\"duration\").alias(\"stddev\")).show",
      "dateUpdated": "Sep 8, 2016 7:08:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1473360931141_-298624626",
      "id": "20160908-185531_178829130",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "import org.apache.spark.sql.functions._\n\u003cconsole\u003e:86: error: not found: value stdev_pop\n                  stdev_pop(\"duration\").alias(\"stddev\")).show\n                  ^\n"
      },
      "dateCreated": "Sep 8, 2016 6:55:31 PM",
      "dateStarted": "Sep 8, 2016 7:08:47 PM",
      "dateFinished": "Sep 8, 2016 7:08:48 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1473361498489_503937509",
      "id": "20160908-190458_2081256583",
      "dateCreated": "Sep 8, 2016 7:04:58 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "angularjs-jenkins-data",
  "id": "angularjs-jenkins-data-2BWU3721R",
  "angularObjects": {
    "2BVXZ3F45:shared_process": [],
    "2BW2TPCWE:shared_process": [],
    "2BWYZZ455:shared_process": [],
    "2BV1F2B99:shared_process": [],
    "2BVUCTEFM:shared_process": [],
    "2BUWSKN3M:shared_process": [],
    "2BWKNQYHM:shared_process": [],
    "2BX121ZXW:shared_process": [],
    "2BY5A38AY:shared_process": [],
    "2BVW9S3B5:shared_process": [],
    "2BV1G5ANX:shared_process": [],
    "2BV8WFDB9:shared_process": [],
    "2BV2C3GM2:shared_process": [],
    "2BV25DY6H:shared_process": [],
    "2BX88BN6H:shared_process": [],
    "2BUPPNFXB:shared_process": [],
    "2BWMNMYXX:shared_process": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}
